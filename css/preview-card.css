/*
  preview-card.css
  Inline-only preview popup (vanilla). Reused single portal with smart positioning.

  Tokens: inherits existing site variables with safe fallbacks.
  - Background: var(--color-surface, #fff)
  - Border:     var(--color-border, #e5e7eb)
  - Text:       var(--color-text-primary, #111)
  - Focus:      var(--focus, #ff7a00)
  - Shadow:     var(--shadow-color, 0,0,0)

  Accessibility:
  - role=tooltip for hover/focus
  - role=dialog when pinned
*/

.pv-portal {
  position: fixed; /* anchor to viewport for robust positioning over any scroller */
  inset: 0;
  z-index: 9999;
  pointer-events: none; /* only enable within card */
}

.pv-card {
  position: absolute;
  max-width: min(92vw, 680px); /* larger card so caption fits comfortably */
  min-width: 260px;
  max-height: min(90vh, 720px); /* taller to keep more text visible without scrolling */
  overflow: auto; /* allow long text to scroll instead of overflowing viewport */
  overscroll-behavior: contain; /* prevent background scroll chaining */
  background: var(--color-surface, #fff);
  color: var(--color-text-primary, #111);
  border: 1px solid var(--color-border, #e5e7eb);
  border-radius: 12px;
  box-shadow:
    0 14px 36px rgba(var(--shadow-color, 0,0,0), 0.20),
    0 2px 6px rgba(var(--shadow-color, 0,0,0), 0.10);
  padding: 10px;
  transform-origin: var(--pv-origin, 50% 100%);
  transition: transform 150ms ease, opacity 150ms ease;
  opacity: 0;
  transform: scale(0.96);
  pointer-events: auto; /* allow interactivity inside */
  will-change: transform, opacity, left, top;
}

.pv-card[data-state="open"] {
  opacity: 1;
  transform: scale(1);
}

@media (prefers-reduced-motion: reduce) {
  .pv-card {
    transition: none !important;
    transform: none !important;
  }
}

/* Arrow */
.pv-arrow {
  position: absolute;
  width: 18px;
  height: 10px;
  overflow: visible;
  color: var(--color-surface, #fff);
  filter: drop-shadow(0 1px 1px rgba(var(--shadow-color, 0,0,0), 0.2));
}

.pv-arrow svg {
  display: block;
  width: 18px;
  height: 10px;
}

.pv-arrow path.bg {
  fill: var(--color-surface, #fff);
}
.pv-arrow path.border {
  fill: var(--color-border, #e5e7eb);
  opacity: .85;
}

/* Arrow side placement */
.pv-card[data-side="top"] .pv-arrow { bottom: -8px; transform: rotate(180deg); }
.pv-card[data-side="bottom"] .pv-arrow { top: -8px; }
.pv-card[data-side="left"] .pv-arrow { right: -12px; top: 10px; transform: rotate(90deg); }
.pv-card[data-side="right"] .pv-arrow { left: -12px; top: 10px; transform: rotate(-90deg); }

/* Content container */
.pv-content {
  display: grid;
  gap: 8px;
}

/* Single item */
.pv-single .pv-item {
/* Edge-to-edge media like the example card: image flush with card edges */
.pv-single .pv-media {
  margin: -8px -8px 8px; /* cancel card padding on top/left/right; keep space below */
  border-radius: 10px 10px 0 0; /* round only the top corners to match the card */
}

/* Adjust for compact padding on very small screens */
@media (max-width: 420px) {
  .pv-single .pv-media {
    margin: -6px -6px 8px;
  }
}
  display: grid;
  gap: 6px;
}

/* Two items grid */
.pv-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 8px;
}

/* Slider */
.pv-slider {
  position: relative;
  overflow: hidden;
  border-radius: 8px;
}

.pv-slider .pv-track {
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: 100%;
  align-items: start;
  gap: 0;
  transform: translateX(var(--pv-x, 0%));
  transition: transform 200ms ease;
  will-change: transform;
}

@media (prefers-reduced-motion: reduce) {
  .pv-slider .pv-track {
    transition: none !important;
  }
}

.pv-slider .pv-slide {
  padding: 0;
  margin: 0;
}

.pv-nav {
  position: absolute;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: space-between;
  pointer-events: none;
}

.pv-nav button {
  pointer-events: auto;
  width: 32px;
  height: 32px;
  border-radius: 9999px;
  border: 1px solid var(--color-border, #e5e7eb);
  background: var(--color-surface, #fff);
  color: var(--color-text-primary, #111);
  display: inline-flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
}

.pv-nav .prev { margin-left: 6px; }
.pv-nav .next { margin-right: 6px; }

.pv-dots {
  display: flex;
  gap: 6px;
  align-items: center;
  justify-content: center;
  padding-top: 6px;
}

.pv-dots button {
  width: 6px;
  height: 6px;
  border-radius: 9999px;
  border: 0;
  background: var(--color-border, #e5e7eb);
  cursor: pointer;
}
.pv-dots button[aria-current="true"] {
  background: var(--link, #0057ff);
}

/* Media */
.pv-media {
  position: relative;
  width: 100%;
  background: var(--color-surface, #fff); /* blend with card like the example */
  border-radius: 12px; /* sync with card corners */
  overflow: hidden;
}

.pv-media img,
.pv-media video {
  display: block;
  width: 100%;
  height: auto;
  max-height: 170px; /* reduced image height to leave more room for caption text */
  object-fit: contain; /* avoid cropping; scale down inside the frame */
  background: var(--color-surface, #fff);
}

/* Caption */
.pv-caption {
  font: 400 16px/1.55 var(--font-sans, system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif);
  color: var(--color-text-primary, #111);
  margin-top: 8px; /* spacing from media */
}

/* Text-only */
.pv-text {
  font: 400 0.95rem/1.45 var(--font-sans, system-ui, -apple-system, Segoe UI, Roboto, Arial, sans-serif);
  color: var(--color-text-primary, #111);
}

/* Pinned/interactive state decoration */
.pv-card[data-pinned="true"] {
  border-color: var(--link, #0057ff);
}

/* Focus visibility on controls */
.pv-card :focus-visible {
  outline: 3px solid var(--focus, #ff7a00);
  outline-offset: 2px;
  border-radius: 6px;
}

/* Bold the first word style like the example via strong/b tags */
.pv-caption strong,
.pv-caption b {
  font-weight: 700;
}

/* Compact on very small screens */
@media (max-width: 420px) {
  .pv-card {
    max-width: 94vw;
    padding: 6px;
  }
  .pv-grid {
    grid-template-columns: 1fr; /* stack on tiny screens for tap targets */
  }
}

/* Utility: visually-hidden (consistent with site) */
.pv-visually-hidden {
  position: absolute !important;
  height: 1px; width: 1px;
  overflow: hidden;
  clip: rect(1px, 1px, 1px, 1px);
  white-space: nowrap;
}