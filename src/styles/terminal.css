/* Terminal Design System - Additional Utilities */

/* Terminal ASCII Art Text */
.terminal-ascii {
  font-family: var(--font-mono);
  line-height: 1.2;
  white-space: pre;
  color: var(--success);
}

/* Terminal Matrix Effect */
.terminal-matrix {
  position: relative;
  overflow: hidden;
}

.terminal-matrix::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image:
    repeating-linear-gradient(
      0deg,
      transparent,
      transparent 2px,
      rgba(145, 208, 118, 0.03) 2px,
      rgba(145, 208, 118, 0.03) 4px
    );
  pointer-events: none;
}

/* Terminal Scanline Effect */
.terminal-scanline {
  position: relative;
  overflow: hidden;
}

.terminal-scanline::before {
  content: '';
  position: absolute;
  top: -100%;
  left: 0;
  right: 0;
  height: 100%;
  background: linear-gradient(
    to bottom,
    transparent 0%,
    rgba(145, 208, 118, 0.1) 50%,
    transparent 100%
  );
  animation: scanline 8s linear infinite;
  pointer-events: none;
}

@keyframes scanline {
  0% { transform: translateY(-100%); }
  100% { transform: translateY(200%); }
}

/* Terminal Typing Effect */
.terminal-typing {
  overflow: hidden;
  border-right: 2px solid var(--success);
  white-space: nowrap;
  animation:
    typing 3.5s steps(40, end),
    blink-caret 0.75s step-end infinite;
}

@keyframes typing {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes blink-caret {
  from, to { border-color: transparent; }
  50% { border-color: var(--success); }
}

/* Terminal Command Styles */
.terminal-command {
  font-family: var(--font-mono);
  background-color: var(--surface);
  border: 1px solid var(--border);
  border-radius: 4px;
  padding: 0.75rem 1rem;
  margin: 0.5rem 0;
  position: relative;
  overflow-x: auto;
}

.terminal-command::before {
  content: '$ ';
  color: var(--success);
  font-weight: bold;
}

.terminal-output {
  font-family: var(--font-mono);
  background-color: var(--background-alt);
  border-left: 3px solid var(--info);
  padding: 0.75rem 1rem;
  margin: 0.5rem 0;
  color: var(--text-secondary);
}

/* Terminal Tab System */
.terminal-tabs {
  display: flex;
  border-bottom: 1px solid var(--border);
  background-color: var(--background-alt);
}

.terminal-tab {
  padding: 0.5rem 1rem;
  font-family: var(--font-mono);
  font-size: 0.875rem;
  color: var(--text-secondary);
  background-color: transparent;
  border: none;
  border-bottom: 2px solid transparent;
  cursor: pointer;
  transition: all 0.2s ease;
}

.terminal-tab:hover {
  color: var(--text-primary);
  background-color: var(--surface);
}

.terminal-tab.active {
  color: var(--success);
  border-bottom-color: var(--success);
  background-color: var(--surface);
}

/* Terminal File Tree */
.terminal-tree {
  font-family: var(--font-mono);
  font-size: 0.875rem;
  color: var(--text-primary);
  line-height: 1.6;
}

.terminal-tree-item {
  padding-left: 1rem;
  position: relative;
}

.terminal-tree-item::before {
  content: '├── ';
  position: absolute;
  left: 0;
  color: var(--text-secondary);
}

.terminal-tree-item:last-child::before {
  content: '└── ';
}

.terminal-tree-folder {
  color: var(--info);
}

.terminal-tree-file {
  color: var(--text-primary);
}

/* Terminal Progress Bar */
.terminal-progress {
  width: 100%;
  height: 1rem;
  background-color: var(--surface);
  border: 1px solid var(--border);
  border-radius: 2px;
  overflow: hidden;
  position: relative;
}

.terminal-progress-bar {
  height: 100%;
  background-color: var(--success);
  transition: width 0.3s ease;
  position: relative;
  overflow: hidden;
}

.terminal-progress-bar::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(
    45deg,
    transparent 25%,
    rgba(255, 255, 255, 0.1) 25%,
    rgba(255, 255, 255, 0.1) 50%,
    transparent 50%,
    transparent 75%,
    rgba(255, 255, 255, 0.1) 75%
  );
  background-size: 1rem 1rem;
  animation: progress-stripes 1s linear infinite;
}

@keyframes progress-stripes {
  0% { background-position: 0 0; }
  100% { background-position: 1rem 0; }
}

/* Terminal Badge */
.terminal-badge {
  display: inline-flex;
  align-items: center;
  padding: 0.25rem 0.5rem;
  font-family: var(--font-mono);
  font-size: 0.75rem;
  font-weight: 500;
  border-radius: 2px;
  letter-spacing: 0.05em;
  text-transform: uppercase;
}

.terminal-badge-success {
  background-color: var(--success);
  color: var(--background);
}

.terminal-badge-info {
  background-color: var(--info);
  color: var(--background);
}

.terminal-badge-warning {
  background-color: var(--warning);
  color: var(--background);
}

.terminal-badge-error {
  background-color: var(--error);
  color: var(--background);
}

.terminal-badge-default {
  background-color: var(--surface);
  color: var(--text-primary);
  border: 1px solid var(--border);
}

/* Terminal Grid Layout */
.terminal-grid {
  display: grid;
  gap: 1px;
  background-color: var(--border);
  padding: 1px;
  border-radius: 4px;
  overflow: hidden;
}

.terminal-grid-item {
  background-color: var(--surface);
  padding: 1rem;
  font-family: var(--font-mono);
}

/* Terminal Glitch Effect */
.terminal-glitch {
  position: relative;
  color: var(--text-primary);
  animation: glitch-skew 1s infinite linear alternate-reverse;
}

.terminal-glitch::before,
.terminal-glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.terminal-glitch::before {
  animation: glitch-1 0.5s infinite linear alternate-reverse;
  color: var(--info);
  z-index: -1;
}

.terminal-glitch::after {
  animation: glitch-2 0.5s infinite linear alternate-reverse;
  color: var(--accent);
  z-index: -2;
}

@keyframes glitch-skew {
  0% { transform: skew(0deg); }
  20% { transform: skew(2deg); }
  40% { transform: skew(-2deg); }
  60% { transform: skew(1deg); }
  80% { transform: skew(-1deg); }
  100% { transform: skew(0deg); }
}

@keyframes glitch-1 {
  0% { clip-path: inset(40% 0 61% 0); transform: translate(-2px, 2px); }
  20% { clip-path: inset(92% 0 1% 0); transform: translate(2px, -2px); }
  40% { clip-path: inset(43% 0 1% 0); transform: translate(-2px, 2px); }
  60% { clip-path: inset(25% 0 58% 0); transform: translate(2px, -2px); }
  80% { clip-path: inset(54% 0 7% 0); transform: translate(-2px, 2px); }
  100% { clip-path: inset(58% 0 43% 0); transform: translate(2px, -2px); }
}

@keyframes glitch-2 {
  0% { clip-path: inset(65% 0 0% 0); transform: translate(2px, -2px); }
  20% { clip-path: inset(0% 0 25% 0); transform: translate(-2px, 2px); }
  40% { clip-path: inset(0% 0 90% 0); transform: translate(2px, -2px); }
  60% { clip-path: inset(35% 0 0% 0); transform: translate(-2px, 2px); }
  80% { clip-path: inset(0% 0 5% 0); transform: translate(2px, -2px); }
  100% { clip-path: inset(0% 0 70% 0); transform: translate(-2px, 2px); }
}

/* Terminal Neon Text */
.terminal-neon {
  color: var(--info);
  text-shadow:
    0 0 5px var(--info),
    0 0 10px var(--info),
    0 0 20px var(--info),
    0 0 40px var(--info);
}

.terminal-neon-green {
  color: var(--success);
  text-shadow:
    0 0 5px var(--success),
    0 0 10px var(--success),
    0 0 20px var(--success),
    0 0 40px var(--success);
}

.terminal-neon-purple {
  color: var(--accent);
  text-shadow:
    0 0 5px var(--accent),
    0 0 10px var(--accent),
    0 0 20px var(--accent),
    0 0 40px var(--accent);
}

/* Terminal CRT Monitor Effect */
.terminal-crt {
  position: relative;
  overflow: hidden;
  background-color: var(--background);
  border-radius: 8px;
  box-shadow:
    inset 0 0 100px rgba(0, 0, 0, 0.5),
    0 0 50px rgba(145, 208, 118, 0.2);
}

.terminal-crt::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    repeating-linear-gradient(
      0deg,
      transparent,
      transparent 2px,
      rgba(0, 0, 0, 0.3) 2px,
      rgba(0, 0, 0, 0.3) 4px
    );
  pointer-events: none;
  z-index: 1;
}

.terminal-crt::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(
    ellipse at center,
    rgba(0, 0, 0, 0) 0%,
    rgba(0, 0, 0, 0.4) 100%
  );
  pointer-events: none;
  z-index: 2;
}

/* ===== ENCOM ATMOSPHERIC EFFECTS ===== */

/* Atmospheric Color Variables */
:root {
  /* ENCOM-inspired atmospheric colors */
  --terminal-atmosphere-primary: #00ffff;
  --terminal-atmosphere-secondary: #ff8000;
  --terminal-atmosphere-accent: #0080ff;
  --terminal-atmosphere-glow: rgba(0, 255, 255, 0.15);
  --terminal-atmosphere-rim: rgba(0, 128, 255, 0.2);
  --terminal-atmosphere-depth: rgba(0, 0, 0, 0.8);
  --terminal-atmosphere-glass: rgba(255, 255, 255, 0.05);
  --terminal-atmosphere-particle: rgba(0, 255, 255, 0.6);
  
  /* Activity-based intensity levels */
  --terminal-intensity-idle: 0.3;
  --terminal-intensity-active: 0.8;
  --terminal-intensity-boot: 1.0;
  
  /* Environmental effect colors */
  --terminal-screen-tint: rgba(0, 255, 255, 0.03);
  --terminal-burn-color: rgba(0, 255, 65, 0.1);
  --terminal-flicker-color: rgba(255, 255, 255, 0.15);
}

/* Terminal Atmospheric Glow - Radial background glow */
.terminal-atmospheric-glow {
  position: relative;
  background:
    radial-gradient(ellipse 120% 80% at 50% 50%,
      var(--terminal-atmosphere-glow) 0%,
      rgba(0, 255, 255, 0.08) 30%,
      rgba(0, 128, 255, 0.04) 60%,
      transparent 100%
    ),
    var(--background);
  
  /* Add subtle animation */
  animation: atmospheric-pulse 8s ease-in-out infinite alternate;
}

.terminal-atmospheric-glow::before {
  content: '';
  position: absolute;
  top: -50%;
  left: -50%;
  right: -50%;
  bottom: -50%;
  background:
    radial-gradient(circle at 30% 20%,
      rgba(0, 255, 255, 0.1) 0%,
      transparent 50%
    ),
    radial-gradient(circle at 70% 80%,
      rgba(255, 128, 0, 0.08) 0%,
      transparent 50%
    );
  opacity: var(--terminal-intensity-idle);
  animation: atmospheric-drift 15s linear infinite;
  pointer-events: none;
  z-index: -1;
}

@keyframes atmospheric-pulse {
  0% {
    filter: brightness(0.9) contrast(1.1);
    box-shadow: 0 0 40px rgba(0, 255, 255, 0.2);
  }
  100% {
    filter: brightness(1.1) contrast(1.0);
    box-shadow: 0 0 80px rgba(0, 255, 255, 0.3);
  }
}

@keyframes atmospheric-drift {
  0% { transform: rotate(0deg) translate(0, 0); }
  25% { transform: rotate(90deg) translate(10px, -5px); }
  50% { transform: rotate(180deg) translate(-5px, 10px); }
  75% { transform: rotate(270deg) translate(-10px, -5px); }
  100% { transform: rotate(360deg) translate(0, 0); }
}

/* Terminal Depth Shadow - Multi-layered shadow system */
.terminal-depth-shadow {
  box-shadow:
    /* Inner depth */
    inset 0 0 60px rgba(0, 0, 0, 0.6),
    inset 0 0 120px rgba(0, 0, 0, 0.4),
    
    /* Main shadow layers */
    0 8px 32px rgba(0, 0, 0, 0.8),
    0 16px 64px rgba(0, 0, 0, 0.6),
    0 32px 128px rgba(0, 0, 0, 0.4),
    
    /* Atmospheric glow layers */
    0 0 20px rgba(0, 255, 255, 0.3),
    0 0 60px rgba(0, 255, 255, 0.15),
    0 0 120px rgba(0, 128, 255, 0.1);
  
  position: relative;
  transform-style: preserve-3d;
}

.terminal-depth-shadow::after {
  content: '';
  position: absolute;
  top: 100%;
  left: 10%;
  right: 10%;
  height: 40px;
  background:
    radial-gradient(ellipse 80% 100% at center,
      rgba(0, 0, 0, 0.6) 0%,
      rgba(0, 0, 0, 0.3) 50%,
      transparent 100%
    );
  filter: blur(8px);
  z-index: -1;
  animation: shadow-depth 6s ease-in-out infinite alternate;
}

@keyframes shadow-depth {
  0% {
    transform: scale(1) translateY(0);
    opacity: 0.6;
  }
  100% {
    transform: scale(1.1) translateY(5px);
    opacity: 0.8;
  }
}

/* Terminal Ambient Light - Ambient rim lighting */
.terminal-ambient-light {
  position: relative;
  border: 1px solid rgba(0, 255, 255, 0.3);
}

.terminal-ambient-light::before {
  content: '';
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background:
    linear-gradient(45deg,
      var(--terminal-atmosphere-primary) 0%,
      var(--terminal-atmosphere-accent) 25%,
      var(--terminal-atmosphere-secondary) 50%,
      var(--terminal-atmosphere-accent) 75%,
      var(--terminal-atmosphere-primary) 100%
    );
  border-radius: inherit;
  opacity: 0.6;
  filter: blur(3px);
  z-index: -1;
  animation: rim-light-rotation 12s linear infinite;
}

.terminal-ambient-light::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background:
    radial-gradient(circle at 20% 80%,
      rgba(0, 255, 255, 0.1) 0%,
      transparent 60%
    ),
    radial-gradient(circle at 80% 20%,
      rgba(255, 128, 0, 0.08) 0%,
      transparent 60%
    );
  border-radius: inherit;
  pointer-events: none;
  animation: ambient-shift 10s ease-in-out infinite alternate;
}

@keyframes rim-light-rotation {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@keyframes ambient-shift {
  0% { opacity: 0.3; }
  100% { opacity: 0.7; }
}

/* Terminal Screen Reflection - Glass/screen reflection overlay */
.terminal-screen-reflection {
  position: relative;
  overflow: hidden;
}

.terminal-screen-reflection::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background:
    linear-gradient(90deg,
      transparent 0%,
      rgba(255, 255, 255, 0.1) 20%,
      rgba(255, 255, 255, 0.2) 50%,
      rgba(255, 255, 255, 0.1) 80%,
      transparent 100%
    );
  animation: screen-reflection 8s linear infinite;
  pointer-events: none;
  z-index: 10;
}

.terminal-screen-reflection::after {
  content: '';
  position: absolute;
  top: 20%;
  right: 10%;
  width: 30%;
  height: 60%;
  background:
    radial-gradient(ellipse 60% 40%,
      rgba(255, 255, 255, 0.05) 0%,
      rgba(255, 255, 255, 0.02) 40%,
      transparent 70%
    );
  transform: rotate(-15deg);
  pointer-events: none;
  z-index: 10;
  animation: reflection-shimmer 4s ease-in-out infinite alternate;
}

@keyframes screen-reflection {
  0% { left: -100%; }
  100% { left: 100%; }
}

@keyframes reflection-shimmer {
  0% { opacity: 0.3; }
  100% { opacity: 0.8; }
}

/* Terminal Activity Pulse - Glow that responds to typing/commands */
.terminal-activity-pulse {
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
}

.terminal-activity-pulse.active {
  box-shadow:
    0 0 20px rgba(0, 255, 255, 0.6),
    0 0 40px rgba(0, 255, 255, 0.4),
    0 0 80px rgba(0, 255, 255, 0.2);
  
  border-color: rgba(0, 255, 255, 0.8);
  background:
    radial-gradient(ellipse at center,
      rgba(0, 255, 255, 0.1) 0%,
      transparent 70%
    ),
    var(--background);
}

.terminal-activity-pulse.active::before {
  content: '';
  position: absolute;
  top: -4px;
  left: -4px;
  right: -4px;
  bottom: -4px;
  background:
    linear-gradient(45deg,
      rgba(0, 255, 255, 0.4),
      rgba(0, 128, 255, 0.3),
      rgba(0, 255, 255, 0.4)
    );
  border-radius: inherit;
  filter: blur(8px);
  z-index: -1;
  animation: activity-pulse-ring 1.5s ease-out;
}

@keyframes activity-pulse-ring {
  0% {
    transform: scale(0.8);
    opacity: 1;
  }
  100% {
    transform: scale(1.2);
    opacity: 0;
  }
}

/* Terminal Power-On - Boot-up lighting sequence */
.terminal-power-on {
  position: relative;
  overflow: hidden;
  animation: power-on-sequence 3s ease-out forwards;
}

.terminal-power-on::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0;
  height: 2px;
  background:
    linear-gradient(90deg,
      transparent,
      var(--terminal-atmosphere-primary),
      transparent
    );
  transform: translate(-50%, -50%);
  animation: power-on-line 3s ease-out forwards;
}

.terminal-power-on::after {
  content: '';
  position: absolute;
  inset: 0;
  background:
    radial-gradient(circle at center,
      rgba(0, 255, 255, 0.3) 0%,
      transparent 70%
    );
  opacity: 0;
  animation: power-on-glow 3s ease-out 1.5s forwards;
}

@keyframes power-on-sequence {
  0% {
    background: var(--background);
    box-shadow: none;
  }
  30% {
    background:
      radial-gradient(ellipse at center,
        rgba(0, 255, 255, 0.05) 0%,
        var(--background) 70%
      );
  }
  100% {
    background:
      radial-gradient(ellipse at center,
        rgba(0, 255, 255, 0.1) 0%,
        var(--background) 70%
      );
    box-shadow:
      0 0 40px rgba(0, 255, 255, 0.3),
      inset 0 0 60px rgba(0, 0, 0, 0.5);
  }
}

@keyframes power-on-line {
  0% {
    width: 0;
    height: 2px;
    opacity: 1;
  }
  50% {
    width: 100%;
    height: 2px;
    opacity: 1;
  }
  100% {
    width: 100%;
    height: 100%;
    opacity: 0.3;
  }
}

@keyframes power-on-glow {
  0% { opacity: 0; }
  100% { opacity: 1; }
}

/* Terminal Standby Glow - Idle state ambient glow */
.terminal-standby-glow {
  position: relative;
  background:
    radial-gradient(ellipse 100% 60% at 50% 40%,
      rgba(0, 255, 255, 0.03) 0%,
      rgba(0, 128, 255, 0.02) 60%,
      transparent 100%
    ),
    var(--background);
  
  box-shadow:
    0 0 20px rgba(0, 255, 255, 0.1),
    inset 0 0 40px rgba(0, 0, 0, 0.3);
  
  animation: standby-breathe 6s ease-in-out infinite alternate;
}

.terminal-standby-glow::before {
  content: '';
  position: absolute;
  top: 10%;
  left: 10%;
  right: 10%;
  bottom: 10%;
  background:
    radial-gradient(circle at 30% 30%,
      rgba(0, 255, 255, 0.06) 0%,
      transparent 50%
    ),
    radial-gradient(circle at 70% 70%,
      rgba(255, 128, 0, 0.04) 0%,
      transparent 50%
    );
  border-radius: inherit;
  animation: standby-drift 12s linear infinite;
  pointer-events: none;
}

@keyframes standby-breathe {
  0% {
    box-shadow:
      0 0 15px rgba(0, 255, 255, 0.08),
      inset 0 0 30px rgba(0, 0, 0, 0.3);
  }
  100% {
    box-shadow:
      0 0 25px rgba(0, 255, 255, 0.15),
      inset 0 0 50px rgba(0, 0, 0, 0.4);
  }
}

@keyframes standby-drift {
  0% { transform: translate(0, 0) rotate(0deg); }
  25% { transform: translate(2px, -1px) rotate(0.5deg); }
  50% { transform: translate(-1px, 2px) rotate(-0.5deg); }
  75% { transform: translate(-2px, -1px) rotate(0.3deg); }
  100% { transform: translate(0, 0) rotate(0deg); }
}

/* ===== ENVIRONMENTAL EFFECTS ===== */

/* Screen Flicker Animation */
.terminal-screen-flicker {
  animation: screen-flicker 0.15s ease-in-out;
}

.terminal-screen-flicker-continuous {
  animation: screen-flicker-continuous 4s ease-in-out infinite;
}

@keyframes screen-flicker {
  0% {
    filter: brightness(1) contrast(1);
    opacity: 1;
  }
  10% {
    filter: brightness(1.2) contrast(1.1);
    opacity: 0.98;
  }
  20% {
    filter: brightness(0.9) contrast(1.05);
    opacity: 1;
  }
  30% {
    filter: brightness(1.1) contrast(1);
    opacity: 0.99;
  }
  100% {
    filter: brightness(1) contrast(1);
    opacity: 1;
  }
}

@keyframes screen-flicker-continuous {
  0%, 100% {
    filter: brightness(1) contrast(1);
    opacity: 1;
  }
  2% {
    filter: brightness(1.05) contrast(1.02);
    opacity: 0.99;
  }
  4% {
    filter: brightness(0.98) contrast(1.01);
    opacity: 1;
  }
  6% {
    filter: brightness(1.02) contrast(1);
    opacity: 0.995;
  }
  50% {
    filter: brightness(1.01) contrast(1.005);
    opacity: 0.998;
  }
}

/* Depth of Field Blur Effects */
.terminal-depth-blur {
  position: relative;
}

.terminal-depth-blur::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background:
    radial-gradient(ellipse 60% 40% at 50% 50%,
      transparent 0%,
      transparent 70%,
      rgba(0, 0, 0, 0.1) 85%,
      rgba(0, 0, 0, 0.3) 100%
    );
  filter: blur(2px);
  pointer-events: none;
  z-index: 1;
}

.terminal-depth-blur .terminal-content {
  position: relative;
  z-index: 2;
}

/* Dynamic Color Temperature Changes */
.terminal-color-temp-warm {
  filter: sepia(0.1) saturate(1.1) hue-rotate(-5deg);
  transition: filter 2s ease-in-out;
}

.terminal-color-temp-cool {
  filter: sepia(0.05) saturate(1.05) hue-rotate(5deg);
  transition: filter 2s ease-in-out;
}

.terminal-color-temp-neutral {
  filter: none;
  transition: filter 2s ease-in-out;
}

/* Atmospheric Particle Effects */
.terminal-dust-motes {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  overflow: hidden;
}

.terminal-dust-motes::before,
.terminal-dust-motes::after {
  content: '';
  position: absolute;
  width: 1px;
  height: 1px;
  background: rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  box-shadow:
    0 0 2px rgba(255, 255, 255, 0.2);
}

.terminal-dust-motes::before {
  top: 20%;
  left: 30%;
  animation: dust-float-1 12s linear infinite;
}

.terminal-dust-motes::after {
  top: 60%;
  left: 70%;
  animation: dust-float-2 15s linear infinite reverse;
}

@keyframes dust-float-1 {
  0% {
    transform: translate(0, 0) rotate(0deg);
    opacity: 0;
  }
  10% {
    opacity: 0.6;
  }
  90% {
    opacity: 0.3;
  }
  100% {
    transform: translate(40px, -30px) rotate(180deg);
    opacity: 0;
  }
}

@keyframes dust-float-2 {
  0% {
    transform: translate(0, 0) rotate(0deg);
    opacity: 0;
  }
  15% {
    opacity: 0.4;
  }
  85% {
    opacity: 0.2;
  }
  100% {
    transform: translate(-35px, -40px) rotate(-180deg);
    opacity: 0;
  }
}

/* Light Ray Effects */
.terminal-light-rays {
  position: relative;
  overflow: hidden;
}

.terminal-light-rays::before {
  content: '';
  position: absolute;
  top: -10%;
  left: -10%;
  width: 2px;
  height: 120%;
  background:
    linear-gradient(to bottom,
      transparent 0%,
      rgba(0, 255, 255, 0.1) 30%,
      rgba(0, 255, 255, 0.05) 70%,
      transparent 100%
    );
  transform: rotate(-5deg);
  animation: light-ray-sweep 20s linear infinite;
  pointer-events: none;
}

.terminal-light-rays::after {
  content: '';
  position: absolute;
  top: 0;
  right: 20%;
  width: 1px;
  height: 100%;
  background:
    linear-gradient(to bottom,
      transparent 0%,
      rgba(255, 128, 0, 0.08) 40%,
      rgba(255, 128, 0, 0.04) 80%,
      transparent 100%
    );
  transform: rotate(8deg);
  animation: light-ray-sweep 25s linear infinite reverse;
  pointer-events: none;
}

@keyframes light-ray-sweep {
  0% { left: -10%; opacity: 0; }
  10% { opacity: 0.6; }
  90% { opacity: 0.3; }
  100% { left: 110%; opacity: 0; }
}

/* Screen Burn-in Simulation */
.terminal-burn-in {
  position: relative;
}

.terminal-burn-in::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background:
    repeating-linear-gradient(
      90deg,
      transparent 0px,
      transparent 1px,
      rgba(0, 255, 65, 0.02) 1px,
      rgba(0, 255, 65, 0.02) 2px
    ),
    repeating-linear-gradient(
      0deg,
      transparent 0px,
      transparent 1px,
      rgba(0, 255, 65, 0.01) 1px,
      rgba(0, 255, 65, 0.01) 2px
    );
  opacity: 0.7;
  pointer-events: none;
  mix-blend-mode: screen;
}

.terminal-burn-in::after {
  content: 'ENCOM OS-12 █';
  position: absolute;
  top: 5px;
  right: 10px;
  font-family: var(--font-mono);
  font-size: 8px;
  color: rgba(0, 255, 65, 0.1);
  pointer-events: none;
  animation: burn-in-flicker 8s ease-in-out infinite;
}

@keyframes burn-in-flicker {
  0%, 100% { opacity: 0.1; }
  50% { opacity: 0.3; }
}

/* ===== ENHANCED CRT EFFECTS ===== */

/* Enhanced Terminal CRT with better depth and lighting */
.terminal-crt-enhanced {
  position: relative;
  overflow: hidden;
  background:
    radial-gradient(ellipse 100% 80% at 50% 50%,
      rgba(0, 0, 0, 0.9) 0%,
      rgba(0, 0, 0, 0.95) 70%,
      rgba(0, 0, 0, 1) 100%
    ),
    var(--background);
  
  border-radius: 12px;
  border: 2px solid rgba(0, 255, 255, 0.2);
  
  box-shadow:
    /* Inner CRT depth */
    inset 0 0 100px rgba(0, 0, 0, 0.8),
    inset 0 0 200px rgba(0, 0, 0, 0.6),
    
    /* Outer glow and depth */
    0 0 50px rgba(0, 255, 255, 0.3),
    0 0 100px rgba(0, 255, 255, 0.15),
    0 8px 32px rgba(0, 0, 0, 0.9),
    0 16px 64px rgba(0, 0, 0, 0.7);
}

/* CRT Scanlines with improved realism */
.terminal-crt-enhanced::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background:
    repeating-linear-gradient(
      0deg,
      transparent 0px,
      transparent 1px,
      rgba(0, 0, 0, 0.4) 1px,
      rgba(0, 0, 0, 0.4) 2px,
      transparent 2px,
      transparent 3px
    );
  pointer-events: none;
  z-index: 10;
  opacity: 0.8;
}

/* CRT Screen Curvature Effect */
.terminal-crt-enhanced::after {
  content: '';
  position: absolute;
  top: -5%;
  left: -5%;
  right: -5%;
  bottom: -5%;
  background:
    radial-gradient(ellipse 100% 100% at 50% 50%,
      transparent 0%,
      transparent 85%,
      rgba(0, 0, 0, 0.3) 90%,
      rgba(0, 0, 0, 0.8) 100%
    );
  border-radius: 20px;
  pointer-events: none;
  z-index: 15;
}

/* Terminal Window with Glass Effects */
.terminal-window-enhanced {
  position: relative;
  background:
    linear-gradient(135deg,
      rgba(255, 255, 255, 0.1) 0%,
      rgba(255, 255, 255, 0.05) 50%,
      rgba(0, 0, 0, 0.1) 100%
    ),
    var(--background-alt);
  
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 8px;
  
  box-shadow:
    0 4px 16px rgba(0, 0, 0, 0.3),
    0 8px 32px rgba(0, 0, 0, 0.2),
    inset 0 1px 0 rgba(255, 255, 255, 0.1),
    inset 0 -1px 0 rgba(0, 0, 0, 0.2);
}

.terminal-window-enhanced::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 50%;
  background:
    linear-gradient(to bottom,
      rgba(255, 255, 255, 0.08) 0%,
      transparent 100%
    );
  border-radius: 8px 8px 0 0;
  pointer-events: none;
}

/* ===== ATMOSPHERIC VARIANTS FOR DIFFERENT STATES ===== */

/* Idle State */
.terminal-state-idle {
  opacity: 0.9;
  filter: brightness(0.95) contrast(1.02);
  transition: all 0.5s ease;
}

.terminal-state-idle .terminal-atmospheric-glow::before {
  opacity: var(--terminal-intensity-idle);
}

/* Active State */
.terminal-state-active {
  opacity: 1;
  filter: brightness(1.05) contrast(1.05);
  transition: all 0.3s ease;
}

.terminal-state-active .terminal-atmospheric-glow::before {
  opacity: var(--terminal-intensity-active);
}

/* Boot State */
.terminal-state-boot {
  filter: brightness(1.1) contrast(1.1) saturate(1.1);
  transition: all 0.2s ease;
}

.terminal-state-boot .terminal-atmospheric-glow::before {
  opacity: var(--terminal-intensity-boot);
}

/* Error State */
.terminal-state-error {
  --terminal-atmosphere-primary: #ff4444;
  --terminal-atmosphere-glow: rgba(255, 68, 68, 0.15);
  filter: brightness(1.1) contrast(1.1) hue-rotate(-30deg);
}

.terminal-state-error .terminal-atmospheric-glow::before {
  opacity: 0.8;
}

/* Success State */
.terminal-state-success {
  --terminal-atmosphere-primary: #44ff44;
  --terminal-atmosphere-glow: rgba(68, 255, 68, 0.15);
  filter: brightness(1.05) contrast(1.05) hue-rotate(30deg);
}

.terminal-state-success .terminal-atmospheric-glow::before {
  opacity: 0.6;
}

/* ===== PERFORMANCE OPTIMIZATIONS & ACCESSIBILITY ===== */

/* Performance Mode - Reduced effects for better performance */
.terminal-performance-mode .terminal-atmospheric-glow::before,
.terminal-performance-mode .terminal-dust-motes,
.terminal-performance-mode .terminal-light-rays,
.terminal-performance-mode .terminal-screen-reflection {
  display: none;
}

.terminal-performance-mode .terminal-atmospheric-glow {
  animation: none;
  background: var(--background);
}

.terminal-performance-mode .terminal-standby-glow {
  animation: none;
  box-shadow: 0 0 10px rgba(0, 255, 255, 0.05);
}

/* Hardware Acceleration Optimizations */
.terminal-gpu-accelerated {
  will-change: transform, opacity, filter;
  transform: translateZ(0);
  backface-visibility: hidden;
}

.terminal-gpu-accelerated * {
  will-change: transform, opacity;
}

/* Reduced Motion for Accessibility */
@media (prefers-reduced-motion: reduce) {
  .terminal-atmospheric-glow,
  .terminal-standby-glow,
  .terminal-ambient-light::before,
  .terminal-screen-reflection::before,
  .terminal-screen-reflection::after,
  .terminal-dust-motes::before,
  .terminal-dust-motes::after,
  .terminal-light-rays::before,
  .terminal-light-rays::after,
  .terminal-burn-in::after {
    animation: none !important;
  }
  
  .terminal-screen-flicker,
  .terminal-screen-flicker-continuous {
    animation: none !important;
  }
  
  .terminal-activity-pulse {
    transition: none !important;
  }
  
  .terminal-power-on {
    animation: none !important;
  }
  
  .terminal-power-on::before,
  .terminal-power-on::after {
    animation: none !important;
    opacity: 0.3 !important;
  }
}

/* High Contrast Mode Support */
@media (prefers-contrast: high) {
  .terminal-atmospheric-glow {
    background: var(--background);
    box-shadow: 0 0 5px rgba(255, 255, 255, 0.8);
  }
  
  .terminal-ambient-light::before {
    opacity: 1;
    filter: none;
  }
  
  .terminal-screen-reflection::before,
  .terminal-screen-reflection::after {
    display: none;
  }
}

/* Color Scheme Support */
@media (prefers-color-scheme: light) {
  :root {
    --terminal-atmosphere-primary: #0066cc;
    --terminal-atmosphere-secondary: #cc4400;
    --terminal-atmosphere-accent: #0080ff;
    --terminal-atmosphere-glow: rgba(0, 102, 204, 0.15);
    --terminal-screen-tint: rgba(0, 102, 204, 0.03);
    --terminal-burn-color: rgba(0, 102, 0, 0.1);
  }
}

/* Focus and Interaction States */
.terminal-window:focus-within {
  outline: 2px solid var(--terminal-atmosphere-primary);
  outline-offset: 2px;
}

.terminal-window:focus-within .terminal-atmospheric-glow {
  animation-duration: 4s;
}

.terminal-window:focus-within .terminal-activity-pulse {
  box-shadow:
    0 0 30px rgba(0, 255, 255, 0.8),
    0 0 60px rgba(0, 255, 255, 0.6),
    0 0 120px rgba(0, 255, 255, 0.4);
}

/* Print Styles - Remove atmospheric effects for printing */
@media print {
  .terminal-atmospheric-glow,
  .terminal-depth-shadow,
  .terminal-ambient-light,
  .terminal-screen-reflection,
  .terminal-dust-motes,
  .terminal-light-rays,
  .terminal-burn-in,
  .terminal-crt-enhanced,
  .terminal-standby-glow {
    background: white !important;
    box-shadow: none !important;
    filter: none !important;
    animation: none !important;
  }
  
  .terminal-atmospheric-glow::before,
  .terminal-atmospheric-glow::after,
  .terminal-ambient-light::before,
  .terminal-ambient-light::after,
  .terminal-screen-reflection::before,
  .terminal-screen-reflection::after,
  .terminal-dust-motes::before,
  .terminal-dust-motes::after,
  .terminal-light-rays::before,
  .terminal-light-rays::after,
  .terminal-burn-in::before,
  .terminal-burn-in::after,
  .terminal-crt-enhanced::before,
  .terminal-crt-enhanced::after,
  .terminal-standby-glow::before {
    display: none !important;
  }
}

/* Utility classes for quick atmospheric combinations */
.terminal-atmosphere-subtle {
  @apply terminal-atmospheric-glow terminal-standby-glow;
}

.terminal-atmosphere-immersive {
  @apply terminal-atmospheric-glow terminal-depth-shadow terminal-ambient-light terminal-screen-reflection terminal-dust-motes terminal-light-rays;
}

.terminal-atmosphere-encom {
  @apply terminal-atmospheric-glow terminal-depth-shadow terminal-ambient-light terminal-screen-reflection terminal-crt-enhanced terminal-burn-in;
}

.terminal-atmosphere-minimal {
  @apply terminal-standby-glow;
}